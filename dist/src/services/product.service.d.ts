import { ProductCreateData, ProductUpdateData, ProductFilters } from '@/types/product.types';
import { Prisma } from '@prisma/client';
export declare class ProductService {
    private static handleJsonField;
    static getAllProducts(filters: ProductFilters, page: number, perPage: number): Promise<{
        products: ({
            category: {
                name: string;
                description: string | null;
                id: string;
                isActive: boolean;
                createdAt: Date;
                updatedAt: Date;
                slug: string;
                image: string | null;
                icon: string | null;
                parentId: string | null;
                sortOrder: number;
                isFeatured: boolean;
                metaTitle: string | null;
                metaDescription: string | null;
            };
            brand: {
                name: string;
                description: string | null;
                id: string;
                isActive: boolean;
                createdAt: Date;
                updatedAt: Date;
                slug: string;
                sortOrder: number;
                logo: string | null;
                website: string | null;
            } | null;
        } & {
            name: string;
            description: string;
            id: string;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
            status: string;
            slug: string;
            isFeatured: boolean;
            metaTitle: string | null;
            metaDescription: string | null;
            categoryId: string;
            price: Prisma.Decimal;
            sku: string;
            barcode: string | null;
            images: string[];
            gallery: string[];
            weight: Prisma.Decimal | null;
            dimensions: Prisma.JsonValue | null;
            attributes: Prisma.JsonValue | null;
            variations: Prisma.JsonValue | null;
            stockQuantity: number;
            inStock: boolean;
            shortDescription: string | null;
            salePrice: Prisma.Decimal | null;
            costPrice: Prisma.Decimal | null;
            lowStockThreshold: number;
            manageStock: boolean;
            isDigital: boolean;
            brandId: string | null;
            averageRating: Prisma.Decimal;
            reviewCount: number;
            viewCount: number;
            salesCount: number;
            seoKeywords: string[];
        })[];
        total: number;
    }>;
    static getProductById(id: string): Promise<({
        category: {
            name: string;
            description: string | null;
            id: string;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            image: string | null;
            icon: string | null;
            parentId: string | null;
            sortOrder: number;
            isFeatured: boolean;
            metaTitle: string | null;
            metaDescription: string | null;
        };
        brand: {
            name: string;
            description: string | null;
            id: string;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            sortOrder: number;
            logo: string | null;
            website: string | null;
        } | null;
        reviews: ({
            user: {
                name: string;
                id: string;
                avatar: string | null;
            };
        } & {
            userId: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            images: string[];
            isApproved: boolean;
            productId: string;
            orderId: string | null;
            rating: number;
            title: string | null;
            review: string;
            isVerifiedPurchase: boolean;
            helpfulCount: number;
        })[];
        _count: {
            reviews: number;
            wishlists: number;
        };
    } & {
        name: string;
        description: string;
        id: string;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        status: string;
        slug: string;
        isFeatured: boolean;
        metaTitle: string | null;
        metaDescription: string | null;
        categoryId: string;
        price: Prisma.Decimal;
        sku: string;
        barcode: string | null;
        images: string[];
        gallery: string[];
        weight: Prisma.Decimal | null;
        dimensions: Prisma.JsonValue | null;
        attributes: Prisma.JsonValue | null;
        variations: Prisma.JsonValue | null;
        stockQuantity: number;
        inStock: boolean;
        shortDescription: string | null;
        salePrice: Prisma.Decimal | null;
        costPrice: Prisma.Decimal | null;
        lowStockThreshold: number;
        manageStock: boolean;
        isDigital: boolean;
        brandId: string | null;
        averageRating: Prisma.Decimal;
        reviewCount: number;
        viewCount: number;
        salesCount: number;
        seoKeywords: string[];
    }) | null>;
    static getProductBySlug(slug: string): Promise<({
        category: {
            name: string;
            description: string | null;
            id: string;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            image: string | null;
            icon: string | null;
            parentId: string | null;
            sortOrder: number;
            isFeatured: boolean;
            metaTitle: string | null;
            metaDescription: string | null;
        };
        brand: {
            name: string;
            description: string | null;
            id: string;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            sortOrder: number;
            logo: string | null;
            website: string | null;
        } | null;
    } & {
        name: string;
        description: string;
        id: string;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        status: string;
        slug: string;
        isFeatured: boolean;
        metaTitle: string | null;
        metaDescription: string | null;
        categoryId: string;
        price: Prisma.Decimal;
        sku: string;
        barcode: string | null;
        images: string[];
        gallery: string[];
        weight: Prisma.Decimal | null;
        dimensions: Prisma.JsonValue | null;
        attributes: Prisma.JsonValue | null;
        variations: Prisma.JsonValue | null;
        stockQuantity: number;
        inStock: boolean;
        shortDescription: string | null;
        salePrice: Prisma.Decimal | null;
        costPrice: Prisma.Decimal | null;
        lowStockThreshold: number;
        manageStock: boolean;
        isDigital: boolean;
        brandId: string | null;
        averageRating: Prisma.Decimal;
        reviewCount: number;
        viewCount: number;
        salesCount: number;
        seoKeywords: string[];
    }) | null>;
    static createProduct(data: ProductCreateData): Promise<{
        category: {
            name: string;
            description: string | null;
            id: string;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            image: string | null;
            icon: string | null;
            parentId: string | null;
            sortOrder: number;
            isFeatured: boolean;
            metaTitle: string | null;
            metaDescription: string | null;
        };
        brand: {
            name: string;
            description: string | null;
            id: string;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            sortOrder: number;
            logo: string | null;
            website: string | null;
        } | null;
    } & {
        name: string;
        description: string;
        id: string;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        status: string;
        slug: string;
        isFeatured: boolean;
        metaTitle: string | null;
        metaDescription: string | null;
        categoryId: string;
        price: Prisma.Decimal;
        sku: string;
        barcode: string | null;
        images: string[];
        gallery: string[];
        weight: Prisma.Decimal | null;
        dimensions: Prisma.JsonValue | null;
        attributes: Prisma.JsonValue | null;
        variations: Prisma.JsonValue | null;
        stockQuantity: number;
        inStock: boolean;
        shortDescription: string | null;
        salePrice: Prisma.Decimal | null;
        costPrice: Prisma.Decimal | null;
        lowStockThreshold: number;
        manageStock: boolean;
        isDigital: boolean;
        brandId: string | null;
        averageRating: Prisma.Decimal;
        reviewCount: number;
        viewCount: number;
        salesCount: number;
        seoKeywords: string[];
    }>;
    static updateProduct(id: string, data: ProductUpdateData): Promise<{
        category: {
            name: string;
            description: string | null;
            id: string;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            image: string | null;
            icon: string | null;
            parentId: string | null;
            sortOrder: number;
            isFeatured: boolean;
            metaTitle: string | null;
            metaDescription: string | null;
        };
        brand: {
            name: string;
            description: string | null;
            id: string;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            sortOrder: number;
            logo: string | null;
            website: string | null;
        } | null;
    } & {
        name: string;
        description: string;
        id: string;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        status: string;
        slug: string;
        isFeatured: boolean;
        metaTitle: string | null;
        metaDescription: string | null;
        categoryId: string;
        price: Prisma.Decimal;
        sku: string;
        barcode: string | null;
        images: string[];
        gallery: string[];
        weight: Prisma.Decimal | null;
        dimensions: Prisma.JsonValue | null;
        attributes: Prisma.JsonValue | null;
        variations: Prisma.JsonValue | null;
        stockQuantity: number;
        inStock: boolean;
        shortDescription: string | null;
        salePrice: Prisma.Decimal | null;
        costPrice: Prisma.Decimal | null;
        lowStockThreshold: number;
        manageStock: boolean;
        isDigital: boolean;
        brandId: string | null;
        averageRating: Prisma.Decimal;
        reviewCount: number;
        viewCount: number;
        salesCount: number;
        seoKeywords: string[];
    }>;
    static deleteProduct(id: string): Promise<void>;
    static getFeaturedProducts(limit?: number): Promise<any>;
    static bulkUpdateProducts(productIds: string[], action: string, data?: any): Promise<void>;
    static duplicateProduct(id: string): Promise<{
        category: {
            name: string;
            description: string | null;
            id: string;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            image: string | null;
            icon: string | null;
            parentId: string | null;
            sortOrder: number;
            isFeatured: boolean;
            metaTitle: string | null;
            metaDescription: string | null;
        };
        brand: {
            name: string;
            description: string | null;
            id: string;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
            slug: string;
            sortOrder: number;
            logo: string | null;
            website: string | null;
        } | null;
    } & {
        name: string;
        description: string;
        id: string;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        status: string;
        slug: string;
        isFeatured: boolean;
        metaTitle: string | null;
        metaDescription: string | null;
        categoryId: string;
        price: Prisma.Decimal;
        sku: string;
        barcode: string | null;
        images: string[];
        gallery: string[];
        weight: Prisma.Decimal | null;
        dimensions: Prisma.JsonValue | null;
        attributes: Prisma.JsonValue | null;
        variations: Prisma.JsonValue | null;
        stockQuantity: number;
        inStock: boolean;
        shortDescription: string | null;
        salePrice: Prisma.Decimal | null;
        costPrice: Prisma.Decimal | null;
        lowStockThreshold: number;
        manageStock: boolean;
        isDigital: boolean;
        brandId: string | null;
        averageRating: Prisma.Decimal;
        reviewCount: number;
        viewCount: number;
        salesCount: number;
        seoKeywords: string[];
    }>;
    static getProductStats(): Promise<{
        total_products: number;
        active_products: number;
        inactive_products: number;
        featured_products: number;
        low_stock_products: number;
        out_of_stock_products: number;
        total_value: number | Prisma.Decimal;
        average_price: number | Prisma.Decimal;
        top_categories: {
            id: string;
            name: string;
            products_count: number;
        }[];
        recent_products: {
            id: string;
            name: string;
            price: Prisma.Decimal;
            category: string;
            brand: string;
            created_at: Date;
        }[];
    }>;
}
//# sourceMappingURL=product.service.d.ts.map