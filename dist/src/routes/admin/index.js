"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const admin_controller_1 = require("@/controllers/admin/admin.controller");
const category_controller_1 = require("@/controllers/admin/category.controller");
const product_controller_1 = require("@/controllers/admin/product.controller");
const order_controller_1 = require("@/controllers/admin/order.controller");
const user_controller_1 = require("@/controllers/admin/user.controller");
const brand_controller_1 = require("@/controllers/admin/brand.controller");
const auth_middleware_1 = require("@/middleware/auth.middleware");
const admin_middleware_1 = require("@/middleware/admin.middleware");
const validation_middleware_1 = require("@/middleware/validation.middleware");
const category_validator_1 = require("@/validators/category.validator");
const product_validator_1 = require("@/validators/product.validator");
const order_validator_1 = require("@/validators/order.validator");
const user_validator_1 = require("@/validators/user.validator");
const router = (0, express_1.Router)();
router.use(auth_middleware_1.authenticate);
router.use(admin_middleware_1.requireAdmin);
router.get('/dashboard', admin_controller_1.AdminController.dashboard);
router.get('/categories', (0, validation_middleware_1.validateQuery)(category_validator_1.categoryQuerySchema), category_controller_1.AdminCategoryController.index);
router.post('/categories', (0, validation_middleware_1.validateBody)(category_validator_1.createCategorySchema), category_controller_1.AdminCategoryController.store);
router.get('/categories/:id', category_controller_1.AdminCategoryController.show);
router.put('/categories/:id', (0, validation_middleware_1.validateBody)(category_validator_1.updateCategorySchema), category_controller_1.AdminCategoryController.update);
router.delete('/categories/:id', category_controller_1.AdminCategoryController.destroy);
router.get('/brands', brand_controller_1.AdminBrandController.index);
router.post('/brands', brand_controller_1.AdminBrandController.store);
router.get('/products', (0, validation_middleware_1.validateQuery)(product_validator_1.productQuerySchema), product_controller_1.AdminProductController.index);
router.post('/products', (0, validation_middleware_1.validateBody)(product_validator_1.createProductSchema), product_controller_1.AdminProductController.store);
router.get('/products/stats', product_controller_1.AdminProductController.stats);
router.get('/products/export', product_controller_1.AdminProductController.export);
router.post('/products/bulk-update', (0, validation_middleware_1.validateBody)(product_validator_1.bulkUpdateProductsSchema), product_controller_1.AdminProductController.bulkUpdate);
router.get('/products/:id', product_controller_1.AdminProductController.show);
router.put('/products/:id', (0, validation_middleware_1.validateBody)(product_validator_1.updateProductSchema), product_controller_1.AdminProductController.update);
router.delete('/products/:id', product_controller_1.AdminProductController.destroy);
router.post('/products/:id/duplicate', product_controller_1.AdminProductController.duplicate);
router.get('/orders', (0, validation_middleware_1.validateQuery)(order_validator_1.orderQuerySchema), order_controller_1.AdminOrderController.index);
router.get('/orders/:id', order_controller_1.AdminOrderController.show);
router.patch('/orders/:id/status', (0, validation_middleware_1.validateBody)(order_validator_1.updateOrderStatusSchema), order_controller_1.AdminOrderController.updateStatus);
router.get('/users', (0, validation_middleware_1.validateQuery)(user_validator_1.userQuerySchema), user_controller_1.AdminUserController.index);
router.post('/users', (0, validation_middleware_1.validateBody)(user_validator_1.createUserSchema), user_controller_1.AdminUserController.store);
router.get('/users/:id', user_controller_1.AdminUserController.show);
router.put('/users/:id', (0, validation_middleware_1.validateBody)(user_validator_1.updateUserSchema), user_controller_1.AdminUserController.update);
router.delete('/users/:id', user_controller_1.AdminUserController.destroy);
exports.default = router;
//# sourceMappingURL=index.js.map